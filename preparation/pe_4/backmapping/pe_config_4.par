# Configuration for preparing mapping file for backmapper
# It's replicates beads and cg_bonds section in xml file so that it is easier to use
# for polymer chains.
# Mapping 4 UA -> 1 CG bead
# 

IDENT="PE"
NAME="PE"

CHAIN_LENGTH=100
ATOMS_PER_BEAD=4
HALF_CHAIN=CHAIN_LENGTH/ATOMS_PER_BEAD
SINGLE_ATOM_FMT = '1:PE:C%d'

##########################################################################################################################
CG_BEADS = [
  {'name': 'A1', 'type': 'A', 'mapping': 'A', 'beads': '1:PE:C1 1:PE:C2 1:PE:C3 1:PE:C4'}
  ]
CG_BEADS.extend([
  {'name': 'B%d' % (i / ATOMS_PER_BEAD), 'type': 'B', 'mapping': 'B', 'beads': ' '.join([SINGLE_ATOM_FMT % x for x in range(i, i+ATOMS_PER_BEAD)])}
  for i in range(ATOMS_PER_BEAD+1, CHAIN_LENGTH-ATOMS_PER_BEAD, ATOMS_PER_BEAD)
  ])
CG_BEADS.append(
  {'name': 'A2', 'type': 'A', 'mapping': 'A', 'beads': '1:PE:C97 1:PE:C98 1:PE:C99 1:PE:C100'}
  )

BONDS = {
    'bond': ['A1 B1']
}
for i in range(1, HALF_CHAIN-2):
    BONDS['bond'].append('B%d B%d' % (i, i+1))

BONDS['bond'].append('B%d A2' % (HALF_CHAIN-2))

ANGLES = {
    'angle_ch2': [],
    'angle_ch3': ['A1 B1 B2', 'B%d B%d A2' % (HALF_CHAIN-3, HALF_CHAIN-2)]
}

for i in range(1, HALF_CHAIN-3):
    ANGLES['angle_ch2'].append('B%d B%d B%d' % (i, i+1, i+2))

DIHEDRALS = {
    'dihedral': ['A1 B1 B2 B3']
}

for i in range(1, HALF_CHAIN-4):
    DIHEDRALS['dihedral'].append('B%d B%d B%d B%d' % (i, i+1, i+2, i+3))

DIHEDRALS['dihedral'].append('B%d B%d B%d A2' % (HALF_CHAIN-4, HALF_CHAIN-3, HALF_CHAIN-2))

MAPPING = {
    'A': '15.035 14.027 14.027 14.027',
    'B': '14.027 14.027 14.027 14.027'
}
